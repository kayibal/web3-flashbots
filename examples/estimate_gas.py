import os
import secrets
from typing import Optional

from eth_account import Account
from eth_account.signers.local import LocalAccount
from web3 import Web3, HTTPProvider
from web3.types import TxParams

from flashbots import flashbot


def env(key: str) -> Optional[str]:
    return os.environ.get(key, None)


def random_account() -> LocalAccount:
    key = "0x" + secrets.token_hex(32)
    return Account.from_key(key)


def main():
    sender: LocalAccount = Account.from_key(env("ETH_SENDER_KEY"))
    signer: LocalAccount = random_account()
    w3 = Web3(HTTPProvider(env("PROVIDER_URL")))
    flashbot(w3, signer, env("RELAY_URL"))

    nonce = w3.eth.get_transaction_count(sender.address)
    tx1: TxParams = {
        "from": sender.address,
        "to": random_account().address,
        "value": Web3.toWei(0.001, "ether"),
        "gas": 21000,
        "maxFeePerGas": Web3.toWei(200, "gwei"),
        "maxPriorityFeePerGas": Web3.toWei(50, "gwei"),
        "nonce": nonce,
        "chainId": 1,
    }

    eth_res = w3.eth.estimate_gas(tx1, "latest")
    fb_res = w3.flashbots.estimate_gas([tx1], "latest")
    print(eth_res, fb_res)

    tx2: TxParams = {
        "from": sender.address,
        "to": "0x6883Fe4D2EE50941b80b41b8F7F9BF2561D844Cc",
        "input": "0x976c58d900000000000000000000000088e6a0c2ddd26feeb64f039a2c41296fcb3f5640000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000001d519bec79deaa2c10000000000000000000000000000000000000000000000000000000ca2d5ea020000000000000000000000000000000000000000000000000000000a0000000100000000000000000000000000000000000000000000000000000000000001200000000000000000000000006883fe4d2ee50941b80b41b8f7f9bf2561d844cc0000000000000000000000006883fe4d2ee50941b80b41b8f7f9bf2561d844cc000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000bebc44782c7db0a1a60cb6fe97d0b483032ff1c7000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000ca2d5ea020000000000000000000000000000000000000000000000000000000c19214f71000000000000000000000000000000000000000000000000000000000402030200000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011b815efb8f581194ae79006d24e0d814b7697f6000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000c19214f71000000000000000000000000000000000000000000000001d553ad0ac27c2e8e0000000000000000000000000000000000000000000000000000000a0000000100000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    }

    fb_res = w3.flashbots.estimate_gas([tx2], "latest")
    print(fb_res)


if __name__ == "__main__":
    main()
